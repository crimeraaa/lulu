# https://taskfile.dev

version: '3'

vars:
  MODE: '{{default "debug"}}'
  CXX: clang++
  CXX_FLAGS: >-
    -std=c++17
    -Wall
    -Wextra
    -Wconversion

  DEBUG_FLAGS: >-
    -O0
    -g
    -fsanitize=address
  RELEASE_FLAGS: >-
    -Werror
    -os

  LULU_OUT: bin/lulu
  LULU_SRC: src

  LUA_OUT: bin/lua
  LUA_SRC: lua/src
  LUA_GLOB: '{{.LUA_SRC}}/*.[ch]'

tasks:
  build:
    desc: Build the Lulu executable
    vars:
      FLAGS: >-
        {{if eq .MODE "debug"}}{{.DEBUG_FLAGS}}{{end}}{{if eq .MODE "release"}}{{.RELEASE_FLAGS}}{{end}}
        {{.CXX_FLAGS}}
      SOURCES: [""]
    requires:
      vars: [MODE, CXX_FLAGS, DEBUG_FLAGS, RELEASE_FLAGS]
      - '{{.CXX}} {{.FLAGS}} -o {{.LULU_OUT}} {{.SOURCES}}'
    sources:
      - '{{.LULU_SRC}}/*.[ch]pp'
      - '{{.LULU_SRC}}/*.h'

  # https://taskfile.dev/usage/#forwarding-cli-arguments-to-commands
  run:
    desc: Build the Lulu executable if needed, then run it.
    cmds:
      - task: build
      - '{{.LULU_OUT}} {{.CLI_ARGS}}'
    interactive: true

  build-lua:
    desc: Build the local Lua executable if needed.
    cmds:
      - |
        cd ./lua
        make --always-make --jobs=8
        mv ./src/lua ../bin/
        mv ./src/luac ../bin/
        mv ./src/liblua.a ../bin/
        cd ..
    sources:
      - '{{.LUA_GLOB}}'

  run-lua:
    desc: Build the local Lua executable if needed, then run it.
    cmds:
      - task: build-lua
      - '{{.LUA_OUT}} {{.CLI_ARGS}}'
    interactive: true

  # lol
  # https://taskfile.dev/styleguide/#prefer-using-external-scripts-instead-of-multi-line-commands
  clean-lua:
    cmds:
      - |
        cd ./lua
        make clean
        cd ..

  fix-whitespace:
    desc: Remove trailing whitespace from all *.{odin,c,h} files.
    deps:
      - task: find-and-replace
        vars:
          VIM_PATTERN: '\s\+$'
          VIM_REPLACE: ''

  # https://github.com/crimeraaa/lulu/blob/16cf4f5d187546704e7f66c9c401d85c4a71b68a/Taskfile.yml#L95C8-L95C11
  find-and-replace:
    desc: Replace a pattern in all *.{odin,[ch]} files. Uses Vim syntax.
    vars:
      VIM: vim
      # Dissection:
      #   -e              Ex mode, used mainly for non-interactive file editing.
      #   -u NONE         Do not load '.vimrc' or 'init.vim' of any kind.
      #   -c <command>    Execute <command> after entering.
      #   -- <...>        Positional arguments: file names or globs thereof.
      VIM_FLAGS: >-
        -e
        -u NONE
        -c ':bufdo! %s/{{.VIM_PATTERN}}/{{.VIM_REPLACE}}/ge'
        -c ':xa'
    prompt: This command will potentially modify all files in '{{.LULU_GLOB}}'. Continue?
    cmds:
      - '{{.VIM}} {{.VIM_FLAGS}} {{.LULU_GLOB}} {{.LUA_GLOB}}'
    requires:
      vars: [VIM_PATTERN, VIM_REPLACE]
    preconditions:
      - sh: command -v {{.VIM}}

  list:
    cmds:
      - ls {{.LULU_GLOB}}
