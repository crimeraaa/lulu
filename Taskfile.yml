# https://taskfile.dev

version: '3'

# https://taskfile.dev/docs/guide#including-other-taskfiles

includes:
  cpp:
    taskfile: ./cpp/Taskfile.yml
    dir: ./cpp

  lua:
    taskfile: ./lua/Taskfile.yml
    dir: ./lua

tasks:
  list:
    cmds:
      - ls -1 {{.VIM_GLOB}}

  fix-whitespace:
    desc: Remove trailing whitespace from all project files.
    deps:
      - task: find-and-replace
        vars:
          VIM_PATTERN: '\s\+$'
          VIM_REPLACE: ''

  # https://github.com/crimeraaa/lulu/blob/16cf4f5d187546704e7f66c9c401d85c4a71b68a/Taskfile.yml#L95C8-L95C11
  find-and-replace:
    desc: Replace a pattern in all project files. Uses Vim syntax.
    vars:
      VIM: vim

      # Dissection:
      #   odin/lulu/*.odin
      #     Match all .odin files in ./odin/lulu/.
      #
      #   {lua,cpp}src/*.[ch]*
      #     Match .c, .h with optional trailing characters, (e.g. .cpp and .hpp)
      #     in ./lua/src/ and ./cpp/src/.
      #
      #   tests/**/*.lua
      #     Match all .lua files in ./tests/ and all sub-directories thereof.
      #
      #   printers/**/*.py
      #     Match all .py files in ./printers/ and all sub-directories thereof.
      VIM_GLOB: 'odin/lulu/*.odin {lua,cpp}/src/*.[ch]* tests/**/*.lua printers/**/*.py'

      # Dissection:
      #   -e
      #     Ex mode, used mainly for non-interactive file editing.
      #
      #   -u NONE
      #     Do not load .vimrc nor init.vim of any kind.
      #
      #   -c <command>
      #     Execute <command> after entering. Multiple instances of this
      #     can be chained.
      #
      #   -- <...>
      #     Positional arguments: file names or globs thereof.
      VIM_FLAGS: >-
        -e
        -u NONE
        -c ':bufdo! %s/{{.VIM_PATTERN}}/{{.VIM_REPLACE}}/ge'
        -c ':xa'
    prompt: This command will potentially modify all project files. Continue?
    cmds:
      - '{{.VIM}} {{.VIM_FLAGS}} {{.VIM_GLOB}}'
    requires:
      vars: [VIM_PATTERN, VIM_REPLACE]
    preconditions:
      - sh: command -v {{.VIM}}
